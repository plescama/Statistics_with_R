#suppress the warnings and other messages from showing in the knitted file.
knitr::opts_chunk$set(
fig.width  = 8,
fig.height = 5,
echo       = TRUE,
warning    = FALSE,
message    = FALSE,
cache      = TRUE
)
# what does the code below do?
# We use the include_graphics() function from the knitr package, and we indicate the path of the image we would like to include.
# "./images/table.png":
# "." - the point indicates the present working directory, from there we navigate to the images subfolder, and type the name of the image.
knitr::include_graphics("./images/table.png")
setwd("~/Desktop/Stats planning/Script 2")
setwd("~/Desktop/Stats planning/Script 3")
---
title: 'Script 3: Practice session 1'
---
title: 'Script 3: Practice session 1'
#suppress the warnings and other messages from showing in the knitted file.
knitr::opts_chunk$set(
fig.width  = 8,
fig.height = 5,
echo       = TRUE,
warning    = FALSE,
message    = FALSE,
cache      = TRUE
)
library(tidyverse)
library(ggplot2)
library(Rmisc)
library(haven) # for loading .sav datasets (or other SPSS datasets)
library(dplyr) # great for summary statistics, offers all necessary functions for measures of central tendency
# Please adjust the path accordingly. This means you should create a separate folder for this second course and script within your (hopefully) already existing R directory. Copy that path here!
setwd("/Users/anamariaplesca/Desktop/Stats planning/Script 3")
# what does the code below do?
# We use the include_graphics() function from the knitr package, and we indicate the path of the image we would like to include.
# "./images/table.png":
# "." - the point indicates the present working directory, from there we navigate to the images subfolder, and type the name of the image.
knitr::include_graphics("./images/table.png")
# In total, there are 10 instances of each condition. Since we have a total of 20 data points, 10 will represent electric shock, and 10 positive reinforcement
method <- rep(c("Electric Shock", "Being Nice"), each = 10)
# For each method, we have 5 male and 5 female participants. We can nest the rep call to create the necessary pattern. That means, we create 5 instances of Male and 5 instances of Female values, and then we repeat this pattern 2 times
gender <- rep(rep(c("Male", "Female"), each = 5), 2)
# Score - manual work:
score <- c(15, 14, 20, 13, 13, # male scores + electric shock
12, 10, 7, 8, 13,   # female scores + electric shock
6, 7, 5, 4, 8 ,     # male scores + being nice
10, 9, 8, 8, 7      # female scores + being nice
)
# putting it all together
method_of_teaching <- data.frame(method, gender, score)
#check the result
method_of_teaching
# code chunk.
data <- read_csv("Data with which to play.csv")
data
str(data)
# Transforming the group column from numerical to factor
data$Group <- as.factor(data$Group)
# Re-labeling the factor
data <- data %>%
mutate(Group = recode_factor(Group,
"1" = "Lecturer",
"2" = "Student"))
# Check result
data
data_summary_friends <- summarySE(data, measurevar = "Friends", groupvars = c("Group"))
data_summary_friends
ggplot(data_summary_friends, aes(x=Group, y=Friends, fill = Group)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=Friends-ci, ymax=Friends+ci), # Minimum CI threshold = Friends - ci
# Maximum CI threshold = Friends + ci
width=.2,                              # Width of the error bars
position=position_dodge(.9))+
labs(x = "Group", y = "Average number of friends",
title = "Average number of friends depending on group")
data_summary_alcohol <- summarySE(data, measurevar = "Alcohol", groupvars = c("Group"))
data_summary_alcohol
ggplot(data_summary_alcohol, aes(x=Group, y=Alcohol, fill = Group)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(aes(ymin=Alcohol-ci, ymax=Alcohol+ci), # Minimum CI threshold = Friends - ci
# Maximum CI threshold = Friends + ci
width=.2,                              # Width of the error bars
position=position_dodge(.9))+
labs(x = "Group", y = "Average alcohol consumption",
title = "Average alcohol consumption depending on group")
str(data)
data
# Filtering
old <-  data %>% # Take the `data` dataset AND
filter(DOB <= 1970) # filter the dataset such that it includes only the people born before and including 1970
# Take a look at the result
old
young <- data %>%
filter(DOB > 1970)
young
mean_alc_old <- mean(old$Alcohol)
mean_alc_young <- mean(young$Alcohol)
mean_alc_old > mean_alc_young # F
mean_alc_old == mean_alc_young # F
mean_alc_old >= mean_alc_young # F
mean_alc_old <= mean_alc_young # T
mean_alc_old < mean_alc_young #T
summary_neurotic <- summarySE(data, measurevar = "Neurotic", groupvars = "Group")
summary_neurotic
reading_within <- read_sav("reading.sav")
reading_between <- read_sav("reading_indep.sav")
reading_between
typeof(reading_between$parallelism) # double
reading_between$parallelism <- as.factor(reading_between$parallelism)
str(reading_between) # the parallelism is now coded as a factor
reading_between_summary <- summarySE(reading_between,  measurevar = "reading_times", groupvars = "parallelism")
# Check the result
reading_between_summary
ggplot(data = reading_between_summary, aes(x = parallelism, y = reading_times, fill = parallelism))+
geom_bar(position = "dodge",
stat = "summary",
fun = "mean",
color="black")+
geom_errorbar(aes(ymin=reading_times-ci, ymax=reading_times+ci), # Minimum CI threshold = mean - ci (from reading_within_summary)
# Maximum CI threshold = mean + ci (from reading_within_summary)
width=.2,                              # Width of the error bars
position=position_dodge(.9))+
labs(x = "Film", y = "Average reading times", fill = "parallelism",
title = "Average reading times as a function of parallelism - Between participan")+
scale_fill_brewer(palette = "Blues")
reading_within_tall <- reading_within %>%
pivot_longer(cols = 2:3, names_to = "parallelism", values_to = "reading_times", values_drop_na = TRUE)
# Check the result
reading_within_tall
# Make sure that parallelism is a factor
reading_within_tall$parallelism <- as.factor(reading_within_tall$parallelism)
# Make sure that the subject column is a factor
reading_within_tall$subj <- as.factor(reading_within_tall$subj)
# Compute a summary statistics to add 95% CI error bars
reading_within_summary <-summarySE(reading_within_tall, measurevar = "reading_times", groupvars = "parallelism")
# Check the result
reading_within_summary
# Compute an summary statistics adjusted to within-participants design
reading_within_summary_adjusted <-summarySEwithin(reading_within_tall, measurevar = "reading_times", withinvars = "parallelism", idvar = "subj")
# Check the result
reading_within_summary_adjusted
ggplot(data = reading_within_summary_adjusted, aes(x = parallelism, y = reading_times, fill = parallelism))+
geom_bar(position = "dodge",
stat = "summary",
fun = "mean",
color="black")+
geom_errorbar(aes(ymin=reading_times-ci, ymax=reading_times+ci), # Minimum CI threshold = mean - ci (from reading_within_summary)
# Maximum CI threshold = mean + ci (from reading_within_summary)
width=.2,                              # Width of the error bars
position=position_dodge(.9))+
labs(x = "Parallelism", y = "Average reading times", fill = "parallelism",
title = "Average reading times as a function of parallelism")+
scale_fill_brewer(palette = "Blues")
question_dat <- read_csv(file = "QuestionSet1.csv")
# Since this is a within-subjects dataset we will summarizare our data using the function summarySEwithin()
summary_question_dat <- summarySEwithin(question_dat, measurevar = "reading_times",withinvars = "condition")
summary_question_dat
ggplot(data = summary_question_dat, aes(x = condition, y = reading_times, fill = condition))+
geom_bar(position = "dodge",
stat = "summary",
fun = "mean",
color="black")+
geom_errorbar(aes(ymin=reading_times-ci, ymax=reading_times+ci), # Minimum CI threshold = mean - ci (from reading_within_summary)
# Maximum CI threshold = mean + ci (from reading_within_summary)
width=.2,                              # Width of the error bars
position=position_dodge(.9))+
labs(x = "Condition", y = "Average reading times", fill = "condition",
title = "Average reading times as a function of condition")+
scale_fill_brewer(palette = "Blues")
