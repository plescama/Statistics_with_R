fig.height = 5,
echo       = TRUE,
warning    = FALSE,
message    = FALSE,
cache      = TRUE
)
# This function checks if you have already installed the ez package. If yes, it is called to the library. If not, it is installed.
if (!requireNamespace("ez")) {
stop(install.packages("ez"))
} else {
library("ez")
}
if (!requireNamespace("nlme")) {
stop(install.packages("nlme"))
} else {
library("nlme")
}
if (!requireNamespace("multcomp")) {
stop(install.packages("multcomp"))
} else {
library("multcomp")
}
library(tidyverse)
library(ggplot2)
library(Rmisc)
library(emmeans)
library(rstatix)
options(scipen = 999) # removes scientific notation from the output
# Please adjust the path accordingly
setwd("~/Desktop/Stats planning/Script 10/")
bushtuckerDat <- read.delim("Bushtucker.dat", header = T)
str(bushtuckerDat)
knitr::opts_chunk$set(echo = TRUE)
# Loading the necessary packages
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
# Loading the necessary packages
library(tidyverse)
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat
str(lexical_decision_dat)
# Making sure all categorical variables are converted to factors
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"NA" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"NA" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
`NA` = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
levels(lexical_decision_dat_recoded$freq)
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
lexical_decision_dat$freq
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
NA = "Pseudo_word"),
lexical_decision_dat$freq
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
NA = "Pseudo_word"),
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
`NA` = "Pseudo_word"),
length = recode(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] = "Pseudo-Word"
lexical_decision_dat_recoded[is.na(lexical_decision_dat_recoded$freq)] = "Pseudo-Word"
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] = "Pseudo-Word"
lexical_decision_dat_recoded
?recode_factor
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
`NA` = "Pseudo_word"),
length = recode(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode(response,
"1" = "YES",
"2" = "NO")
) %>%
replace_na(freq = "Psuedo_word")
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
`NA` = "Pseudo_word"),
length = recode(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode(response,
"1" = "YES",
"2" = "NO")
) %>%
replace_na(freq = list("Psuedo_word"))
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
`NA` = "Pseudo_word"),
length = recode(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode(response,
"1" = "YES",
"2" = "NO")
)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
`NA` = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
lexical_decision_dat$freq
levels(lexical_decision_dat$freq)
lexical_decision_dat_recoded
lexical_decision_dat_recoded <- lexical_decision_dat_recoded %>%
replace_na(freq, "Pseudo_word")
lexical_decision_dat_recoded <- lexical_decision_dat_recoded %>%
replace_na(freq, "Pseudo_word")
lexical_decision_dat_recoded <- lexical_decision_dat_recoded %>%
replace_na(lexical_decision_dat_recoded$freq, "Pseudo_word")
lexical_decision_dat_recoded <- lexical_decision_dat_recoded %>%
mutate(freq = replace_na(freq, "Pseudo_word"))
lexical_decision_dat_recoded <- lexical_decision_dat_recoded %>%
dplyr::mutate(freq = replace_na(freq, "Pseudo_word"))
lexical_decision_dat_recoded$freq[is.na()] <- "Pseudo_word"
is.na(lexical_decision_dat_recoded$freq) <- "Pseudo_word"
lexical_decision_dat_recoded$freq
replace_na(lexical_decision_dat_recoded$freq, "Pseudo_word")
lexical_decision_dat_recoded$freq %>%
replace_na("Pseudo_word")
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"NA" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"NA" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
#lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"NA" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"NA" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded$freq %>%
replace_na("Pseudo_word")
lexical_decision_dat_recoded[is.na(lexical_decision_dat_recoded$freq)]
lexical_decision_dat_recoded[is.na(lexical_decision_dat_recoded$freq)]
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)]
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] <- "Psuedo_Word"
lexical_decision_dat_recoded$freq
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] <- "Psuedo_Word"
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] <- NA
lexical_decision_dat_recoded$freq
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] <- 1
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)]
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] <- `1`
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] <- `1`
lexical_decision_dat_recoded$freq[is.na(lexical_decision_dat_recoded$freq)] <- `1`
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"NA" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
lexical_decision_dat_recoded %>%
replace_na(list(freq = 0))
lexical_decision_dat_recoded %>%
replace_na(list(freq = "Pseudoword"))
lexical_decision_dat_recoded %>%
replace_na(freq = "Pseudoword")
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat$freq %>%
replace_na("Pseudo_word")
lexical_decision_dat$freq %>%
replace_na(0)
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
lexical_decision_dat$freq
lexical_decision_dat <- lexical_decision_dat$freq %>%
replace_na(0)
lexical_decision_dat$freq <- lexical_decision_dat$freq %>%
replace_na(0)
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat$freq <- lexical_decision_dat$freq %>%
replace_na(0)
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
lexical_decision_dat$freq
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"0" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat$freq <- lexical_decision_dat$freq %>%
replace_na("Pseudo_word")
lexical_decision_dat$freq <- lexical_decision_dat$freq %>%
replace_na(0)
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"0" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
lexical_decision_dat_recoded
length(unique(lexical_decision_dat_recoded$participant))
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat
# Updated solution for Task 1.3., 14.07:
# In order to properly be able to recode the NA values within the column of a dataframe, the NAs need to be replaced in two steps.
# Step 1: Use the replace_na() function to transform the NA value to a value that is the same as the values of the different levels in your column - in our case, we can use 0, since the rest of the levels are 1, 2, and 3
# Step 2: Declare the columns to be recoded as factors, including the column on which you have previously applied the replace_na() function
# Step 3: Use the recode_factor function.
lexical_decision_dat$freq <- lexical_decision_dat$freq %>%
replace_na(0)
# Making sure all categorical variables are converted to factors
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"0" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
lexical_decision_dat <- haven::read_sav("Lexical_Decision_RTs.sav")
lexical_decision_dat
lexical_decision_dat$freq
lexical_decision_dat$freq <- lexical_decision_dat$freq %>%
replace_na(0)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$type <- as.factor(lexical_decision_dat$type)
lexical_decision_dat$freq <- as.factor(lexical_decision_dat$freq)
lexical_decision_dat$length <- as.factor(lexical_decision_dat$length)
lexical_decision_dat$response <- as.factor(lexical_decision_dat$response)
# It's good practice to save the result of your recoding in a new variable in case you would like to access the original data at a later step
lexical_decision_dat_recoded <- lexical_decision_dat %>%
mutate(type = recode_factor(type,
"1" = "Real_word",
"2" = "Pseudo_word"),
freq = recode_factor(freq,
"1" = "low",
"2" = "medium" ,
"3" = "high" ,
"0" = "Pseudo_word"),
length = recode_factor(length,
"1" = "short",
"2" = "medium" ,
"3" = "long"  ),
response = recode_factor(response,
"1" = "YES",
"2" = "NO")
)
lexical_decision_dat_recoded
